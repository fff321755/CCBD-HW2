{"ast":null,"code":"/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nvar apiGateway = apiGateway || {};\napiGateway.core = apiGateway.core || {};\napiGateway.core.sigV4ClientFactory = {};\n\napiGateway.core.sigV4ClientFactory.newClient = function (config) {\n  var AWS_SHA_256 = 'AWS4-HMAC-SHA256';\n  var AWS4_REQUEST = 'aws4_request';\n  var AWS4 = 'AWS4';\n  var X_AMZ_DATE = 'x-amz-date';\n  var X_AMZ_SECURITY_TOKEN = 'x-amz-security-token';\n  var HOST = 'host';\n  var AUTHORIZATION = 'Authorization';\n\n  function hash(value) {\n    return CryptoJS.SHA256(value);\n  }\n\n  function hexEncode(value) {\n    return value.toString(CryptoJS.enc.Hex);\n  }\n\n  function hmac(secret, value) {\n    return CryptoJS.HmacSHA256(value, secret, {\n      asBytes: true\n    });\n  }\n\n  function buildCanonicalRequest(method, path, queryParams, headers, payload) {\n    return method + '\\n' + buildCanonicalUri(path) + '\\n' + buildCanonicalQueryString(queryParams) + '\\n' + buildCanonicalHeaders(headers) + '\\n' + buildCanonicalSignedHeaders(headers) + '\\n' + hexEncode(hash(payload));\n  }\n\n  function hashCanonicalRequest(request) {\n    return hexEncode(hash(request));\n  }\n\n  function buildCanonicalUri(uri) {\n    return encodeURI(uri);\n  }\n\n  function buildCanonicalQueryString(queryParams) {\n    if (Object.keys(queryParams).length < 1) {\n      return '';\n    }\n\n    var sortedQueryParams = [];\n\n    for (var property in queryParams) {\n      if (queryParams.hasOwnProperty(property)) {\n        sortedQueryParams.push(property);\n      }\n    }\n\n    sortedQueryParams.sort();\n    var canonicalQueryString = '';\n\n    for (var i = 0; i < sortedQueryParams.length; i++) {\n      canonicalQueryString += sortedQueryParams[i] + '=' + fixedEncodeURIComponent(queryParams[sortedQueryParams[i]]) + '&';\n    }\n\n    return canonicalQueryString.substr(0, canonicalQueryString.length - 1);\n  }\n\n  function fixedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n      return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  function buildCanonicalHeaders(headers) {\n    var canonicalHeaders = '';\n    var sortedKeys = [];\n\n    for (var property in headers) {\n      if (headers.hasOwnProperty(property)) {\n        sortedKeys.push(property);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (var i = 0; i < sortedKeys.length; i++) {\n      canonicalHeaders += sortedKeys[i].toLowerCase() + ':' + headers[sortedKeys[i]] + '\\n';\n    }\n\n    return canonicalHeaders;\n  }\n\n  function buildCanonicalSignedHeaders(headers) {\n    var sortedKeys = [];\n\n    for (var property in headers) {\n      if (headers.hasOwnProperty(property)) {\n        sortedKeys.push(property.toLowerCase());\n      }\n    }\n\n    sortedKeys.sort();\n    return sortedKeys.join(';');\n  }\n\n  function buildStringToSign(datetime, credentialScope, hashedCanonicalRequest) {\n    return AWS_SHA_256 + '\\n' + datetime + '\\n' + credentialScope + '\\n' + hashedCanonicalRequest;\n  }\n\n  function buildCredentialScope(datetime, region, service) {\n    return datetime.substr(0, 8) + '/' + region + '/' + service + '/' + AWS4_REQUEST;\n  }\n\n  function calculateSigningKey(secretKey, datetime, region, service) {\n    return hmac(hmac(hmac(hmac(AWS4 + secretKey, datetime.substr(0, 8)), region), service), AWS4_REQUEST);\n  }\n\n  function calculateSignature(key, stringToSign) {\n    return hexEncode(hmac(key, stringToSign));\n  }\n\n  function buildAuthorizationHeader(accessKey, credentialScope, headers, signature) {\n    return AWS_SHA_256 + ' Credential=' + accessKey + '/' + credentialScope + ', SignedHeaders=' + buildCanonicalSignedHeaders(headers) + ', Signature=' + signature;\n  }\n\n  var awsSigV4Client = {};\n\n  if (config.accessKey === undefined || config.secretKey === undefined) {\n    return awsSigV4Client;\n  }\n\n  awsSigV4Client.accessKey = apiGateway.core.utils.assertDefined(config.accessKey, 'accessKey');\n  awsSigV4Client.secretKey = apiGateway.core.utils.assertDefined(config.secretKey, 'secretKey');\n  awsSigV4Client.sessionToken = config.sessionToken;\n  awsSigV4Client.serviceName = apiGateway.core.utils.assertDefined(config.serviceName, 'serviceName');\n  awsSigV4Client.region = apiGateway.core.utils.assertDefined(config.region, 'region');\n  awsSigV4Client.endpoint = apiGateway.core.utils.assertDefined(config.endpoint, 'endpoint');\n\n  awsSigV4Client.makeRequest = function (request) {\n    var verb = apiGateway.core.utils.assertDefined(request.verb, 'verb');\n    var path = apiGateway.core.utils.assertDefined(request.path, 'path');\n    var queryParams = apiGateway.core.utils.copy(request.queryParams);\n\n    if (queryParams === undefined) {\n      queryParams = {};\n    }\n\n    var headers = apiGateway.core.utils.copy(request.headers);\n\n    if (headers === undefined) {\n      headers = {};\n    } //If the user has not specified an override for Content type the use default\n\n\n    if (headers['Content-Type'] === undefined) {\n      headers['Content-Type'] = config.defaultContentType;\n    } //If the user has not specified an override for Accept type the use default\n\n\n    if (headers['Accept'] === undefined) {\n      headers['Accept'] = config.defaultAcceptType;\n    }\n\n    var body = apiGateway.core.utils.copy(request.body);\n\n    if (body === undefined || verb === 'GET') {\n      // override request body and set to empty when signing GET requests\n      body = '';\n    } else {\n      body = JSON.stringify(body);\n    } //If there is no body remove the content-type header so it is not included in SigV4 calculation\n\n\n    if (body === '' || body === undefined || body === null) {\n      delete headers['Content-Type'];\n    }\n\n    var datetime = new Date().toISOString().replace(/\\.\\d{3}Z$/, 'Z').replace(/[:\\-]|\\.\\d{3}/g, '');\n    headers[X_AMZ_DATE] = datetime;\n    var parser = document.createElement('a');\n    parser.href = awsSigV4Client.endpoint;\n    headers[HOST] = parser.hostname;\n    var canonicalRequest = buildCanonicalRequest(verb, path, queryParams, headers, body);\n    var hashedCanonicalRequest = hashCanonicalRequest(canonicalRequest);\n    var credentialScope = buildCredentialScope(datetime, awsSigV4Client.region, awsSigV4Client.serviceName);\n    var stringToSign = buildStringToSign(datetime, credentialScope, hashedCanonicalRequest);\n    var signingKey = calculateSigningKey(awsSigV4Client.secretKey, datetime, awsSigV4Client.region, awsSigV4Client.serviceName);\n    var signature = calculateSignature(signingKey, stringToSign);\n    headers[AUTHORIZATION] = buildAuthorizationHeader(awsSigV4Client.accessKey, credentialScope, headers, signature);\n\n    if (awsSigV4Client.sessionToken !== undefined && awsSigV4Client.sessionToken !== '') {\n      headers[X_AMZ_SECURITY_TOKEN] = awsSigV4Client.sessionToken;\n    }\n\n    delete headers[HOST];\n    var url = config.endpoint + path;\n    var queryString = buildCanonicalQueryString(queryParams);\n\n    if (queryString != '') {\n      url += '?' + queryString;\n    } //Need to re-attach Content-Type if it is not specified at this point\n\n\n    if (headers['Content-Type'] === undefined) {\n      headers['Content-Type'] = config.defaultContentType;\n    }\n\n    var signedRequest = {\n      method: verb,\n      url: url,\n      headers: headers,\n      data: body\n    };\n    return axios(signedRequest);\n  };\n\n  return awsSigV4Client;\n};","map":{"version":3,"sources":["/Users/fkhw/CourseWorks/Cloud Computing & Big Data/homework2/front/photo-search/src/lib/apiGatewayCore/sigV4Client.js"],"names":["apiGateway","core","sigV4ClientFactory","newClient","config","AWS_SHA_256","AWS4_REQUEST","AWS4","X_AMZ_DATE","X_AMZ_SECURITY_TOKEN","HOST","AUTHORIZATION","hash","value","CryptoJS","SHA256","hexEncode","toString","enc","Hex","hmac","secret","HmacSHA256","asBytes","buildCanonicalRequest","method","path","queryParams","headers","payload","buildCanonicalUri","buildCanonicalQueryString","buildCanonicalHeaders","buildCanonicalSignedHeaders","hashCanonicalRequest","request","uri","encodeURI","Object","keys","length","sortedQueryParams","property","hasOwnProperty","push","sort","canonicalQueryString","i","fixedEncodeURIComponent","substr","str","encodeURIComponent","replace","c","charCodeAt","toUpperCase","canonicalHeaders","sortedKeys","toLowerCase","join","buildStringToSign","datetime","credentialScope","hashedCanonicalRequest","buildCredentialScope","region","service","calculateSigningKey","secretKey","calculateSignature","key","stringToSign","buildAuthorizationHeader","accessKey","signature","awsSigV4Client","undefined","utils","assertDefined","sessionToken","serviceName","endpoint","makeRequest","verb","copy","defaultContentType","defaultAcceptType","body","JSON","stringify","Date","toISOString","parser","document","createElement","href","hostname","canonicalRequest","signingKey","url","queryString","signedRequest","data","axios"],"mappings":"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","sourcesContent":["/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \nvar apiGateway = apiGateway || {};\napiGateway.core = apiGateway.core || {};\n\napiGateway.core.sigV4ClientFactory = {};\napiGateway.core.sigV4ClientFactory.newClient = function (config) {\n    var AWS_SHA_256 = 'AWS4-HMAC-SHA256';\n    var AWS4_REQUEST = 'aws4_request';\n    var AWS4 = 'AWS4';\n    var X_AMZ_DATE = 'x-amz-date';\n    var X_AMZ_SECURITY_TOKEN = 'x-amz-security-token';\n    var HOST = 'host';\n    var AUTHORIZATION = 'Authorization';\n\n    function hash(value) {\n        return CryptoJS.SHA256(value);\n    }\n\n    function hexEncode(value) {\n        return value.toString(CryptoJS.enc.Hex);\n    }\n\n    function hmac(secret, value) {\n        return CryptoJS.HmacSHA256(value, secret, {asBytes: true});\n    }\n\n    function buildCanonicalRequest(method, path, queryParams, headers, payload) {\n        return method + '\\n' +\n            buildCanonicalUri(path) + '\\n' +\n            buildCanonicalQueryString(queryParams) + '\\n' +\n            buildCanonicalHeaders(headers) + '\\n' +\n            buildCanonicalSignedHeaders(headers) + '\\n' +\n            hexEncode(hash(payload));\n    }\n\n    function hashCanonicalRequest(request) {\n        return hexEncode(hash(request));\n    }\n\n    function buildCanonicalUri(uri) {\n        return encodeURI(uri);\n    }\n\n    function buildCanonicalQueryString(queryParams) {\n        if (Object.keys(queryParams).length < 1) {\n            return '';\n        }\n\n        var sortedQueryParams = [];\n        for (var property in queryParams) {\n            if (queryParams.hasOwnProperty(property)) {\n                sortedQueryParams.push(property);\n            }\n        }\n        sortedQueryParams.sort();\n\n        var canonicalQueryString = '';\n        for (var i = 0; i < sortedQueryParams.length; i++) {\n            canonicalQueryString += sortedQueryParams[i] + '=' + fixedEncodeURIComponent(queryParams[sortedQueryParams[i]]) + '&';\n        }\n        return canonicalQueryString.substr(0, canonicalQueryString.length - 1);\n    }\n\n    function fixedEncodeURIComponent (str) {\n      return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n        return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n      });\n    }\n\n    function buildCanonicalHeaders(headers) {\n        var canonicalHeaders = '';\n        var sortedKeys = [];\n        for (var property in headers) {\n            if (headers.hasOwnProperty(property)) {\n                sortedKeys.push(property);\n            }\n        }\n        sortedKeys.sort();\n\n        for (var i = 0; i < sortedKeys.length; i++) {\n            canonicalHeaders += sortedKeys[i].toLowerCase() + ':' + headers[sortedKeys[i]] + '\\n';\n        }\n        return canonicalHeaders;\n    }\n\n    function buildCanonicalSignedHeaders(headers) {\n        var sortedKeys = [];\n        for (var property in headers) {\n            if (headers.hasOwnProperty(property)) {\n                sortedKeys.push(property.toLowerCase());\n            }\n        }\n        sortedKeys.sort();\n\n        return sortedKeys.join(';');\n    }\n\n    function buildStringToSign(datetime, credentialScope, hashedCanonicalRequest) {\n        return AWS_SHA_256 + '\\n' +\n            datetime + '\\n' +\n            credentialScope + '\\n' +\n            hashedCanonicalRequest;\n    }\n\n    function buildCredentialScope(datetime, region, service) {\n        return datetime.substr(0, 8) + '/' + region + '/' + service + '/' + AWS4_REQUEST\n    }\n\n    function calculateSigningKey(secretKey, datetime, region, service) {\n        return hmac(hmac(hmac(hmac(AWS4 + secretKey, datetime.substr(0, 8)), region), service), AWS4_REQUEST);\n    }\n\n    function calculateSignature(key, stringToSign) {\n        return hexEncode(hmac(key, stringToSign));\n    }\n\n    function buildAuthorizationHeader(accessKey, credentialScope, headers, signature) {\n        return AWS_SHA_256 + ' Credential=' + accessKey + '/' + credentialScope + ', SignedHeaders=' + buildCanonicalSignedHeaders(headers) + ', Signature=' + signature;\n    }\n\n    var awsSigV4Client = { };\n    if(config.accessKey === undefined || config.secretKey === undefined) {\n        return awsSigV4Client;\n    }\n    awsSigV4Client.accessKey = apiGateway.core.utils.assertDefined(config.accessKey, 'accessKey');\n    awsSigV4Client.secretKey = apiGateway.core.utils.assertDefined(config.secretKey, 'secretKey');\n    awsSigV4Client.sessionToken = config.sessionToken;\n    awsSigV4Client.serviceName = apiGateway.core.utils.assertDefined(config.serviceName, 'serviceName');\n    awsSigV4Client.region = apiGateway.core.utils.assertDefined(config.region, 'region');\n    awsSigV4Client.endpoint = apiGateway.core.utils.assertDefined(config.endpoint, 'endpoint');\n\n    awsSigV4Client.makeRequest = function (request) {\n        var verb = apiGateway.core.utils.assertDefined(request.verb, 'verb');\n        var path = apiGateway.core.utils.assertDefined(request.path, 'path');\n        var queryParams = apiGateway.core.utils.copy(request.queryParams);\n        if (queryParams === undefined) {\n            queryParams = {};\n        }\n        var headers = apiGateway.core.utils.copy(request.headers);\n        if (headers === undefined) {\n            headers = {};\n        }\n\n        //If the user has not specified an override for Content type the use default\n        if(headers['Content-Type'] === undefined) {\n            headers['Content-Type'] = config.defaultContentType;\n        }\n\n        //If the user has not specified an override for Accept type the use default\n        if(headers['Accept'] === undefined) {\n            headers['Accept'] = config.defaultAcceptType;\n        }\n\n        var body = apiGateway.core.utils.copy(request.body);\n        if (body === undefined || verb === 'GET') { // override request body and set to empty when signing GET requests\n            body = '';\n        }  else {\n            body = JSON.stringify(body);\n        }\n\n        //If there is no body remove the content-type header so it is not included in SigV4 calculation\n        if(body === '' || body === undefined || body === null) {\n            delete headers['Content-Type'];\n        }\n\n        var datetime = new Date().toISOString().replace(/\\.\\d{3}Z$/, 'Z').replace(/[:\\-]|\\.\\d{3}/g, '');\n        headers[X_AMZ_DATE] = datetime;\n        var parser = document.createElement('a');\n        parser.href = awsSigV4Client.endpoint;\n        headers[HOST] = parser.hostname;\n\n        var canonicalRequest = buildCanonicalRequest(verb, path, queryParams, headers, body);\n        var hashedCanonicalRequest = hashCanonicalRequest(canonicalRequest);\n        var credentialScope = buildCredentialScope(datetime, awsSigV4Client.region, awsSigV4Client.serviceName);\n        var stringToSign = buildStringToSign(datetime, credentialScope, hashedCanonicalRequest);\n        var signingKey = calculateSigningKey(awsSigV4Client.secretKey, datetime, awsSigV4Client.region, awsSigV4Client.serviceName);\n        var signature = calculateSignature(signingKey, stringToSign);\n        headers[AUTHORIZATION] = buildAuthorizationHeader(awsSigV4Client.accessKey, credentialScope, headers, signature);\n        if(awsSigV4Client.sessionToken !== undefined && awsSigV4Client.sessionToken !== '') {\n            headers[X_AMZ_SECURITY_TOKEN] = awsSigV4Client.sessionToken;\n        }\n        delete headers[HOST];\n\n        var url = config.endpoint + path;\n        var queryString = buildCanonicalQueryString(queryParams);\n        if (queryString != '') {\n            url += '?' + queryString;\n        }\n\n        //Need to re-attach Content-Type if it is not specified at this point\n        if(headers['Content-Type'] === undefined) {\n            headers['Content-Type'] = config.defaultContentType;\n        }\n\n        var signedRequest = {\n            method: verb,\n            url: url,\n            headers: headers,\n            data: body\n        };\n        return axios(signedRequest);\n    };\n\n    return awsSigV4Client;\n};\n"]},"metadata":{},"sourceType":"module"}