{"ast":null,"code":"/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nvar apiGateway = apiGateway || {};\napiGateway.core = apiGateway.core || {};\napiGateway.core.apiGatewayClientFactory = {};\n\napiGateway.core.apiGatewayClientFactory.newClient = function (simpleHttpClientConfig, sigV4ClientConfig) {\n  var apiGatewayClient = {}; //Spin up 2 httpClients, one for simple requests, one for SigV4\n\n  var sigV4Client = apiGateway.core.sigV4ClientFactory.newClient(sigV4ClientConfig);\n  var simpleHttpClient = apiGateway.core.simpleHttpClientFactory.newClient(simpleHttpClientConfig);\n\n  apiGatewayClient.makeRequest = function (request, authType, additionalParams, apiKey) {\n    //Default the request to use the simple http client\n    var clientToUse = simpleHttpClient; //Attach the apiKey to the headers request if one was provided\n\n    if (apiKey !== undefined && apiKey !== '' && apiKey !== null) {\n      request.headers['x-api-key'] = apiKey;\n    }\n\n    if (request.body === undefined || request.body === '' || request.body === null || Object.keys(request.body).length === 0) {\n      request.body = undefined;\n    } // If the user specified any additional headers or query params that may not have been modeled\n    // merge them into the appropriate request properties\n\n\n    request.headers = apiGateway.core.utils.mergeInto(request.headers, additionalParams.headers);\n    request.queryParams = apiGateway.core.utils.mergeInto(request.queryParams, additionalParams.queryParams); //If an auth type was specified inject the appropriate auth client\n\n    if (authType === 'AWS_IAM') {\n      clientToUse = sigV4Client;\n    } //Call the selected http client to make the request, returning a promise once the request is sent\n\n\n    return clientToUse.makeRequest(request);\n  };\n\n  return apiGatewayClient;\n};","map":{"version":3,"sources":["/Users/fkhw/CourseWorks/Cloud Computing & Big Data/homework2/front/photo-search/src/lib/apiGatewayCore/apiGatewayClient.js"],"names":["apiGateway","core","apiGatewayClientFactory","newClient","simpleHttpClientConfig","sigV4ClientConfig","apiGatewayClient","sigV4Client","sigV4ClientFactory","simpleHttpClient","simpleHttpClientFactory","makeRequest","request","authType","additionalParams","apiKey","clientToUse","undefined","headers","body","Object","keys","length","utils","mergeInto","queryParams"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,UAAU,GAAGA,UAAU,IAAI,EAA/B;AACAA,UAAU,CAACC,IAAX,GAAkBD,UAAU,CAACC,IAAX,IAAmB,EAArC;AAEAD,UAAU,CAACC,IAAX,CAAgBC,uBAAhB,GAA0C,EAA1C;;AACAF,UAAU,CAACC,IAAX,CAAgBC,uBAAhB,CAAwCC,SAAxC,GAAoD,UAAUC,sBAAV,EAAkCC,iBAAlC,EAAqD;AACrG,MAAIC,gBAAgB,GAAG,EAAvB,CADqG,CAErG;;AACA,MAAIC,WAAW,GAAGP,UAAU,CAACC,IAAX,CAAgBO,kBAAhB,CAAmCL,SAAnC,CAA6CE,iBAA7C,CAAlB;AACA,MAAII,gBAAgB,GAAGT,UAAU,CAACC,IAAX,CAAgBS,uBAAhB,CAAwCP,SAAxC,CAAkDC,sBAAlD,CAAvB;;AAEAE,EAAAA,gBAAgB,CAACK,WAAjB,GAA+B,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,gBAA7B,EAA+CC,MAA/C,EAAuD;AAClF;AACA,QAAIC,WAAW,GAAGP,gBAAlB,CAFkF,CAIlF;;AACA,QAAIM,MAAM,KAAKE,SAAX,IAAwBF,MAAM,KAAK,EAAnC,IAAyCA,MAAM,KAAK,IAAxD,EAA8D;AAC1DH,MAAAA,OAAO,CAACM,OAAR,CAAgB,WAAhB,IAA+BH,MAA/B;AACH;;AAED,QAAIH,OAAO,CAACO,IAAR,KAAiBF,SAAjB,IAA8BL,OAAO,CAACO,IAAR,KAAiB,EAA/C,IAAqDP,OAAO,CAACO,IAAR,KAAiB,IAAtE,IAA8EC,MAAM,CAACC,IAAP,CAAYT,OAAO,CAACO,IAApB,EAA0BG,MAA1B,KAAqC,CAAvH,EAA0H;AACtHV,MAAAA,OAAO,CAACO,IAAR,GAAeF,SAAf;AACH,KAXiF,CAalF;AACA;;;AACAL,IAAAA,OAAO,CAACM,OAAR,GAAkBlB,UAAU,CAACC,IAAX,CAAgBsB,KAAhB,CAAsBC,SAAtB,CAAgCZ,OAAO,CAACM,OAAxC,EAAiDJ,gBAAgB,CAACI,OAAlE,CAAlB;AACAN,IAAAA,OAAO,CAACa,WAAR,GAAsBzB,UAAU,CAACC,IAAX,CAAgBsB,KAAhB,CAAsBC,SAAtB,CAAgCZ,OAAO,CAACa,WAAxC,EAAqDX,gBAAgB,CAACW,WAAtE,CAAtB,CAhBkF,CAkBlF;;AACA,QAAIZ,QAAQ,KAAK,SAAjB,EAA4B;AACxBG,MAAAA,WAAW,GAAGT,WAAd;AACH,KArBiF,CAuBlF;;;AACA,WAAOS,WAAW,CAACL,WAAZ,CAAwBC,OAAxB,CAAP;AACH,GAzBD;;AA0BA,SAAON,gBAAP;AACH,CAjCD","sourcesContent":["/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \nvar apiGateway = apiGateway || {};\napiGateway.core = apiGateway.core || {};\n\napiGateway.core.apiGatewayClientFactory = {};\napiGateway.core.apiGatewayClientFactory.newClient = function (simpleHttpClientConfig, sigV4ClientConfig) {\n    var apiGatewayClient = { };\n    //Spin up 2 httpClients, one for simple requests, one for SigV4\n    var sigV4Client = apiGateway.core.sigV4ClientFactory.newClient(sigV4ClientConfig);\n    var simpleHttpClient = apiGateway.core.simpleHttpClientFactory.newClient(simpleHttpClientConfig);\n\n    apiGatewayClient.makeRequest = function (request, authType, additionalParams, apiKey) {\n        //Default the request to use the simple http client\n        var clientToUse = simpleHttpClient;\n\n        //Attach the apiKey to the headers request if one was provided\n        if (apiKey !== undefined && apiKey !== '' && apiKey !== null) {\n            request.headers['x-api-key'] = apiKey;\n        }\n\n        if (request.body === undefined || request.body === '' || request.body === null || Object.keys(request.body).length === 0) {\n            request.body = undefined;\n        }\n\n        // If the user specified any additional headers or query params that may not have been modeled\n        // merge them into the appropriate request properties\n        request.headers = apiGateway.core.utils.mergeInto(request.headers, additionalParams.headers);\n        request.queryParams = apiGateway.core.utils.mergeInto(request.queryParams, additionalParams.queryParams);\n\n        //If an auth type was specified inject the appropriate auth client\n        if (authType === 'AWS_IAM') {\n            clientToUse = sigV4Client;\n        }\n\n        //Call the selected http client to make the request, returning a promise once the request is sent\n        return clientToUse.makeRequest(request);\n    };\n    return apiGatewayClient;\n};\n"]},"metadata":{},"sourceType":"module"}