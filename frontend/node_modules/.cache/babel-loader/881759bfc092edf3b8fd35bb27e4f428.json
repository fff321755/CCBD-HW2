{"ast":null,"code":"var _jsxFileName = \"/Users/fkhw/CourseWorks/Cloud Computing & Big Data/homework2/photo-search/src/searchPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SearchPhotos() {\n  _s();\n\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition; // console.log(SpeechRecognition)\n\n  if (SpeechRecognition) {\n    console.log(\"Your Browser supports speech Recognition\");\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true; // recognition.lang = \"en-US\";\n\n    searchForm.insertAdjacentHTML(\"beforeend\", '<button type=\"button\"><i class=\"fas fa-microphone\"></i></button>');\n    searchFormInput.style.paddingRight = \"50px\";\n    const micBtn = searchForm.querySelector(\"button\");\n    const micIcon = micBtn.firstElementChild;\n    micBtn.addEventListener(\"click\", micBtnClick);\n\n    function micBtnClick() {\n      if (micIcon.classList.contains(\"fa-microphone\")) {\n        // Start Voice Recognition\n        recognition.start(); // First time you have to allow access to mic!\n      } else {\n        recognition.stop();\n      }\n    }\n\n    recognition.addEventListener(\"start\", startSpeechRecognition); // <=> recognition.onstart = function() {...}\n\n    function startSpeechRecognition() {\n      micIcon.classList.remove(\"fa-microphone\");\n      micIcon.classList.add(\"fa-microphone-slash\");\n      searchFormInput.focus();\n      console.log(\"Voice activated, SPEAK\");\n    }\n\n    recognition.addEventListener(\"end\", endSpeechRecognition); // <=> recognition.onend = function() {...}\n\n    function endSpeechRecognition() {\n      micIcon.classList.remove(\"fa-microphone-slash\");\n      micIcon.classList.add(\"fa-microphone\");\n      searchFormInput.focus();\n      console.log(\"Speech recognition service disconnected\");\n    }\n\n    recognition.addEventListener(\"result\", resultOfSpeechRecognition); // <=> recognition.onresult = function(event) {...} - Fires when you stop talking\n\n    function resultOfSpeechRecognition(event) {\n      const current = event.resultIndex;\n      const transcript = event.results[current][0].transcript;\n\n      if (transcript.toLowerCase().trim() === \"stop recording\") {\n        recognition.stop();\n      } else if (!searchFormInput.value) {\n        searchFormInput.value = transcript;\n      } else {\n        if (transcript.toLowerCase().trim() === \"go\") {\n          searchForm.submit();\n        } else if (transcript.toLowerCase().trim() === \"reset input\") {\n          searchFormInput.value = \"\";\n        } else {\n          searchFormInput.value = transcript;\n        }\n      } // searchFormInput.value = transcript;\n      // searchFormInput.focus();\n      // setTimeout(() => {\n      //   searchForm.submit();\n      // }, 500);\n\n    }\n\n    info.textContent = 'Voice Commands: \"stop recording\", \"reset input\", \"go\"';\n  }\n\n  ;\n  const [query, setQuery] = useState(\"\");\n  const [labels, setlabels] = useState(\"\");\n  const [imageSelected, setImage] = useState(null);\n  const [pics, setPics] = useState([]);\n\n  const searchPhotos = async e => {\n    e.preventDefault();\n    console.log(`search for ${query}`);\n    await fetch(`https://ri9wp1d2z2.execute-api.us-east-1.amazonaws.com/a2/search?q=${query}`, {\n      headers: {\n        \"x-api-key\": 'jiVJQZYBAQa7DAi0PNYHj8lDrVHG5ADn1tYgS3Xu'\n      }\n    }).then(response => response.json()).then(data => setPics(data));\n  };\n\n  const fileSelectHandeler = event => {\n    setImage(event.target.files[0]);\n  };\n\n  function uuidv4() {\n    // ref:https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  const uploadPhotos = async e => {\n    e.preventDefault();\n\n    if (imageSelected) {\n      console.log(`upload`);\n      await fetch(`https://ri9wp1d2z2.execute-api.us-east-1.amazonaws.com/a2/b2a26998008/${uuidv4()}.${imageSelected.name.split('.').slice(-1)[0]}`, {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": `image/png`,\n          \"x-amz-meta-customLabels\": labels,\n          \"x-api-key\": 'jiVJQZYBAQa7DAi0PNYHj8lDrVHG5ADn1tYgS3Xu'\n        },\n        body: imageSelected\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchPhotos,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"query\",\n        className: \"input\",\n        placeholder: `Try \"dog\" or \"apple\"`,\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"voice-button\",\n      children: \"\\uD83C\\uDFA4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: uploadPhotos,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"img\",\n        name: \"img\",\n        accept: \"image/png, image/jpg\",\n        onChange: fileSelectHandeler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"labels\",\n        className: \"input\",\n        placeholder: `Labels`,\n        value: labels,\n        onChange: e => setlabels(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: [pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card--image\",\n          src: pic,\n          width: \"50%\",\n          height: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)\n      }, pic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchPhotos, \"cBOxSlOAW1jnj0ShSEEniw3lKuw=\");\n\n_c = SearchPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPhotos\");","map":{"version":3,"sources":["/Users/fkhw/CourseWorks/Cloud Computing & Big Data/homework2/photo-search/src/searchPhotos.js"],"names":["React","useState","SearchPhotos","SpeechRecognition","window","webkitSpeechRecognition","console","log","recognition","continuous","searchForm","insertAdjacentHTML","searchFormInput","style","paddingRight","micBtn","querySelector","micIcon","firstElementChild","addEventListener","micBtnClick","classList","contains","start","stop","startSpeechRecognition","remove","add","focus","endSpeechRecognition","resultOfSpeechRecognition","event","current","resultIndex","transcript","results","toLowerCase","trim","value","submit","info","textContent","query","setQuery","labels","setlabels","imageSelected","setImage","pics","setPics","searchPhotos","e","preventDefault","fetch","headers","then","response","json","data","fileSelectHandeler","target","files","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","uploadPhotos","name","split","slice","method","body","map","pic"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nexport function SearchPhotos() {\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    // console.log(SpeechRecognition)\n\n    \n\n\n\n    if(SpeechRecognition) {\n        console.log(\"Your Browser supports speech Recognition\");\n        \n        const recognition = new SpeechRecognition();\n        recognition.continuous = true;\n        // recognition.lang = \"en-US\";\n      \n        searchForm.insertAdjacentHTML(\"beforeend\", '<button type=\"button\"><i class=\"fas fa-microphone\"></i></button>');\n        searchFormInput.style.paddingRight = \"50px\";\n      \n        const micBtn = searchForm.querySelector(\"button\");\n        const micIcon = micBtn.firstElementChild;\n      \n        micBtn.addEventListener(\"click\", micBtnClick);\n        function micBtnClick() {\n          if(micIcon.classList.contains(\"fa-microphone\")) { // Start Voice Recognition\n            recognition.start(); // First time you have to allow access to mic!\n          }\n          else {\n            recognition.stop();\n          }\n        }\n      \n        recognition.addEventListener(\"start\", startSpeechRecognition); // <=> recognition.onstart = function() {...}\n        function startSpeechRecognition() {\n          micIcon.classList.remove(\"fa-microphone\");\n          micIcon.classList.add(\"fa-microphone-slash\");\n          searchFormInput.focus();\n          console.log(\"Voice activated, SPEAK\");\n        }\n      \n        recognition.addEventListener(\"end\", endSpeechRecognition); // <=> recognition.onend = function() {...}\n        function endSpeechRecognition() {\n          micIcon.classList.remove(\"fa-microphone-slash\");\n          micIcon.classList.add(\"fa-microphone\");\n          searchFormInput.focus();\n          console.log(\"Speech recognition service disconnected\");\n        }\n      \n        recognition.addEventListener(\"result\", resultOfSpeechRecognition); // <=> recognition.onresult = function(event) {...} - Fires when you stop talking\n        function resultOfSpeechRecognition(event) {\n          const current = event.resultIndex;\n          const transcript = event.results[current][0].transcript;\n          \n          if(transcript.toLowerCase().trim()===\"stop recording\") {\n            recognition.stop();\n          }\n          else if(!searchFormInput.value) {\n            searchFormInput.value = transcript;\n          }\n          else {\n            if(transcript.toLowerCase().trim()===\"go\") {\n              searchForm.submit();\n            }\n            else if(transcript.toLowerCase().trim()===\"reset input\") {\n              searchFormInput.value = \"\";\n            }\n            else {\n              searchFormInput.value = transcript;\n            }\n          }\n          // searchFormInput.value = transcript;\n          // searchFormInput.focus();\n          // setTimeout(() => {\n          //   searchForm.submit();\n          // }, 500);\n        }\n        \n        info.textContent = 'Voice Commands: \"stop recording\", \"reset input\", \"go\"';\n        \n    };\n\n\n\n\n\n\n\n\n\n\n\n    const [query, setQuery] = useState(\"\");\n    const [labels, setlabels] = useState(\"\");\n    const [imageSelected, setImage] = useState(null);\n    const [pics, setPics] = useState([]);\n\n    const searchPhotos = async (e) => {\n        e.preventDefault()\n        console.log(`search for ${query}`);\n        await fetch(`https://ri9wp1d2z2.execute-api.us-east-1.amazonaws.com/a2/search?q=${query}`,\n                {headers:{\n                    \"x-api-key\": 'jiVJQZYBAQa7DAi0PNYHj8lDrVHG5ADn1tYgS3Xu',\n                }\n                }\n            )\n            .then(response => response.json())\n            .then(data => setPics(data));\n    };\n\n    const fileSelectHandeler = event => {\n        setImage(event.target.files[0])\n    }\n\n    function uuidv4() {\n        // ref:https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n    }\n\n    const uploadPhotos = async (e) => {\n        e.preventDefault()\n        if (imageSelected) {\n            console.log(`upload`);\n            await fetch(`https://ri9wp1d2z2.execute-api.us-east-1.amazonaws.com/a2/b2a26998008/${uuidv4()}.${imageSelected.name.split('.').slice(-1)[0]}`,\n                    {\n                        method: \"put\",\n                        headers:{\n                        \"Content-Type\": `image/png`,\n                        \"x-amz-meta-customLabels\": labels,\n                        \"x-api-key\": 'jiVJQZYBAQa7DAi0PNYHj8lDrVHG5ADn1tYgS3Xu',\n                        },\n                        body: imageSelected\n                    }\n                )\n        }\n    };\n\n\n    return (\n        <>\n        <form className=\"form\" onSubmit={searchPhotos}> \n            <label className=\"label\" htmlFor=\"query\"> </label>\n            <input\n                type=\"text\"\n                name=\"query\"\n                className=\"input\"\n                placeholder={`Try \"dog\" or \"apple\"`}\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"button\">Search</button>\n        </form>\n        <button type=\"submit\" className=\"voice-button\">🎤</button>\n        <br></br>\n        \n        <form className=\"form\" onSubmit={uploadPhotos}>\n            <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/png, image/jpg\" onChange={fileSelectHandeler}/>\n            <input\n                type=\"text\"\n                name=\"labels\"\n                className=\"input\"\n                placeholder={`Labels`}\n                value={labels}\n                onChange={(e) => setlabels(e.target.value)}\n            />\n            <button type=\"submit\" className=\"button\">Upload</button>\n        </form>\n\n        <br></br>\n        <br></br>\n        <div className=\"card-list\">\n            {\n                pics.map((pic) => \n                <div className=\"card\" key={pic} >\n                <img\n                    className=\"card--image\"\n                    src={pic}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n                </div>)};\n        </div>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}